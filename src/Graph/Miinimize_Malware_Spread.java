package Graph;

import java.util.ArrayList;

public class Miinimize_Malware_Spread {
    static int count=0;
    public static int minMalwareSpread(int[][] graph, int[] initial) {

        ArrayList<ArrayList<Integer>> g=new ArrayList<>();
        for (int i = 0; i <graph.length ; i++) {
            g.add(new ArrayList<>());
        }
        for (int i = 0; i <graph.length ; i++) {
            for (int j = 0; j <graph[i].length ; j++) {
               if (graph[i][j]==1)
                g.get(i).add(j);
            }
        }
        boolean visited[]=new boolean[graph.length];
        for (int i = 0; i < initial.length; i++) {
            visited[initial[i]]=true;
        }
//        for (int i = 0; i <initial.length ; i++) {
//            if(!visited[initial[i]]){
                infected(g,initial[0],visited);
//            }
//        }
        return count;
    }
    public static void infected(ArrayList<ArrayList<Integer>> g,int src,boolean visited[]){

        visited[src]=true;
        for (int e:g.get(src)) {
            if(!visited[e]){
                count++;
                infected(g,e,visited);
            }
        }
    }
    public static void main(String[] args) {
        int graph[][]={{1,0,0,0},{0,1,0,0},{0,0,1,1},{0,0,1,1}};
        int initial[]={3,1};
        System.out.println(minMalwareSpread(graph,initial));
    }
}
